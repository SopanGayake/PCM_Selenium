<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DTPLREN91" failures="0" tests="29" name="FunctionalFolwTesting.FPMtoPCFAutomationTesting" time="24.989" errors="1" timestamp="2024-07-03T13:02:14 IST" skipped="28">
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="FPMDefaultValuesNo" time="24.989">
    <error message="no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;//select[@aria-label=&#039;VVIP Paying&#039;]&quot;}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: &#039;4.9.1&#039;, revision: &#039;eb2032df7f&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.9&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0cd02c9f089db431e235d8084d121dbf, findElement {using=xpath, value=//select[@aria-label=&#039;VVIP Paying&#039;]}]
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.63 (df799988fdc9..., userDataDir: C:\Users\SOPAN~1.GAY\AppDat...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61556}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61556/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0cd02c9f089db431e235d8084d121dbf" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//select[@aria-label='VVIP Paying']"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0cd02c9f089db431e235d8084d121dbf, findElement {using=xpath, value=//select[@aria-label='VVIP Paying']}]
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.63 (df799988fdc9..., userDataDir: C:\Users\SOPAN~1.GAY\AppDat...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61556}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61556/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0cd02c9f089db431e235d8084d121dbf
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at FunctionalFlow.FPMtoPCFAutomation.FPMDefaultValuesNo(FPMtoPCFAutomation.java:189)
at FunctionalFolwTesting.FPMtoPCFAutomationTesting.FPMDefaultValuesNo(FPMtoPCFAutomationTesting.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- FPMDefaultValuesNo -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="SelfcaredisplayPrice">
    <skipped/>
  </testcase> <!-- SelfcaredisplayPrice -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="BalAdjForLDPpacksTest">
    <skipped/>
  </testcase> <!-- BalAdjForLDPpacksTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="GetReports">
    <skipped/>
  </testcase> <!-- GetReports -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="FreindlyNamesTest">
    <skipped/>
  </testcase> <!-- FreindlyNamesTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="ApplicableSourcesTest">
    <skipped/>
  </testcase> <!-- ApplicableSourcesTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="RemarkPriceXdaysTest">
    <skipped/>
  </testcase> <!-- RemarkPriceXdaysTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="TotalPricePointTest">
    <skipped/>
  </testcase> <!-- TotalPricePointTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PCFtoPCFDirectMapping">
    <skipped/>
  </testcase> <!-- PCFtoPCFDirectMapping -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PRODUCT_MRP">
    <skipped/>
  </testcase> <!-- PRODUCT_MRP -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PackageDashboardCategory">
    <skipped/>
  </testcase> <!-- PackageDashboardCategory -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="FPMDefaultValuesYes">
    <skipped/>
  </testcase> <!-- FPMDefaultValuesYes -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="TataPlayBouquet">
    <skipped/>
  </testcase> <!-- TataPlayBouquet -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="FriendlyValuesMapping">
    <skipped/>
  </testcase> <!-- FriendlyValuesMapping -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="AnyStateValidation01Test">
    <skipped/>
  </testcase> <!-- AnyStateValidation01Test -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="SDHDFieldTest">
    <skipped/>
  </testcase> <!-- SDHDFieldTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PackageChageTypeAutomationTest">
    <skipped/>
  </testcase> <!-- PackageChageTypeAutomationTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PackagePlacementCatalogue">
    <skipped/>
  </testcase> <!-- PackagePlacementCatalogue -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="ChannelCountValidation">
    <skipped/>
  </testcase> <!-- ChannelCountValidation -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="AddBrdAndALC">
    <skipped/>
  </testcase> <!-- AddBrdAndALC -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="PCFDefaultValuesZero">
    <skipped/>
  </testcase> <!-- PCFDefaultValuesZero -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="FPMtoPCFDirectValue">
    <skipped/>
  </testcase> <!-- FPMtoPCFDirectValue -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="createNewFPMTest">
    <skipped/>
  </testcase> <!-- createNewFPMTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="EligibleMultiTVCalculationTest">
    <skipped/>
  </testcase> <!-- EligibleMultiTVCalculationTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="GLCodeUpdation">
    <skipped/>
  </testcase> <!-- GLCodeUpdation -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="AnyStateValidation02Test">
    <skipped/>
  </testcase> <!-- AnyStateValidation02Test -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="ChargingPriceforNRCPack">
    <skipped/>
  </testcase> <!-- ChargingPriceforNRCPack -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="AttachedPCFTest">
    <skipped/>
  </testcase> <!-- AttachedPCFTest -->
  <system-out/>
  <testcase classname="FunctionalFolwTesting.FPMtoPCFAutomationTesting" name="MultiTVContentDBRTest">
    <skipped/>
  </testcase> <!-- MultiTVContentDBRTest -->
  <system-out/>
</testsuite> <!-- FunctionalFolwTesting.FPMtoPCFAutomationTesting -->
